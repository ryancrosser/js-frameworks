{"version":3,"sources":["app.module.js","app.route.js","services/state.service.js","services/data.service.js","components/top-nav-bar/top-nav-bar.component.js","components/shell/shell.component.js","components/query-container/query-container.component.js","components/map/map.component.js","components/grid/grid.component.js","components/content/content.component.js","components/shell/shell.controller.js","components/query-container/query-container.controller.js","components/map/map.controller.js","components/grid/grid.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function () {\n    'use strict';\n\n    agGrid.initialiseAgGridWithAngular1(angular);\n    angular.module('app', [\n        '720kb.datepicker',\n        'agGrid',\n        'ui.router',\n        'ui-leaflet'\n    ]);\n})();\n","(function () {\n    'use strict';\n\n    routes.$inject = [\"$stateProvider\", \"$urlRouterProvider\"];\n    angular\n        .module('app')\n        .config(routes);\n\n    function routes($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider\n            // .when('/c?id', '/contacts/:id')\n            .otherwise('/');\n\n        $stateProvider\n            .state('main', {\n                url: '/',\n                template: '<content></content>'\n            }).state('another', {\n                url: '/another',\n                template: 'This is another page.'\n            });\n    }\n})();\n","(function () {\n    'use strict';\n\n    StateService.$inject = [\"$rootScope\"];\n    angular\n        .module('app')\n        .service('StateService', StateService);\n\n    function StateService($rootScope) {\n        var _data = [];\n\n        this.saveData = function (newData) {\n            _data.length = 0;\n            Array.prototype.push.apply(_data, newData);\n            $rootScope.$broadcast('data:stored', { data: _data });\n        };\n\n        this.getData = function () {\n            return _data;\n        };\n\n        this.setData = function (data) {\n            this.data.length = 0;\n            angular.merge(this.data, data);\n        };\n    }\n})();\n","(function () {\n    'use strict';\n\n    DataService.$inject = [\"$http\", \"$q\"];\n    angular\n        .module('app')\n        .service('DataService', DataService);\n\n    function DataService($http, $q) {\n        this.url = '//dataapi2.herokuapp.com/data';\n\n        this.getAllData = function (params) {\n            var deferred = $q.defer();\n\n            var promises = [];\n            if (params.seed) {\n                var seeds = params.seed;\n                delete params.seed;\n                seeds.forEach(function (seed) {\n                    var currentParams = JSON.parse(JSON.stringify(params));\n                    currentParams.seed = seed;\n                    promises.push(this.getData(currentParams));\n                }, this);\n            }\n\n            $q.all(promises).then(function (results) {\n                var combinedResults = results.reduce(function (previousValue, currentResult) {\n                    return previousValue.concat(currentResult.data);\n                }, []);\n                deferred.resolve(combinedResults);\n            }).catch(function (err) {\n                deferred.reject(err);\n            });\n\n            return deferred.promise;\n        };\n\n        this.getData = function (params) {\n            var deferred = $q.defer();\n\n            if (params.seedsStr) {\n                delete params.seedsStr;\n            }\n\n            if (params.activityType === '') {\n                delete params.activityType;\n            }\n            if (params.date && params.date.start) {\n                params.date_gte = params.date.start;\n                delete params.date.start;\n            }\n            if (params.date && params.date.end) {\n                params.date_lte = params.date.end;\n                delete params.date.end;\n            }\n            if (params.date && Object.keys(params.date).length === 0) {\n                delete params.date;\n            }\n\n            $http.get(this.url, { params: params }).then(function (response) {\n                deferred.resolve(response);\n            }).catch(function (err) {\n                deferred.reject(err);\n            });\n\n            return deferred.promise;\n        }.bind(this);\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .component('topNavBar', {\n            templateUrl: 'components/top-nav-bar/top-nav-bar.view.html'\n        });\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .component('shell', {\n            templateUrl: 'components/shell/shell.view.html'\n        });\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .component('queryContainer', {\n            templateUrl: 'components/query-container/query-container.view.html',\n            controller: 'QueryContainerController'\n        });\n})();\n\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .component('map', {\n            templateUrl: 'components/map/map.view.html',\n            controller: 'MapController'\n        });\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .component('grid', {\n            templateUrl: 'components/grid/grid.view.html',\n            controller: 'GridController'\n        });\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .component('content', {\n            templateUrl: 'components/content/content.view.html'\n        });\n})();\n","","(function () {\n    'use strict';\n\n    QueryContainerController.$inject = [\"DataService\", \"StateService\"];\n    angular\n        .module('app')\n        .controller('QueryContainerController', QueryContainerController);\n\n    function QueryContainerController(DataService, StateService) {\n        'ngInject';\n\n        this.inputs = {\n            seedsStr: '5376462406'\n        };\n\n        this.submit = function () {\n            if (this.inputs.seedsStr) {\n                this.inputs.seed = this.inputs.seedsStr.split(',');\n                this.inputs.seed = this.inputs.seed.map(Function.prototype.call, String.prototype.trim);\n            } else {\n                this.inputs.seed = '';\n            }\n\n            DataService.getAllData(JSON.parse(JSON.stringify(this.inputs))).then(function (results) {\n                StateService.saveData(results);\n            }).catch(function (err) {\n                console.error(err);\n            });\n        }.bind(this);\n    }\n})();\n","(function () {\n    'use strict';\n\n    MapController.$inject = [\"$rootScope\", \"leafletData\", \"StateService\"];\n    angular\n        .module('app')\n        .controller('MapController', MapController);\n\n    function MapController($rootScope, leafletData, StateService) {\n        'ngInject';\n\n        var vm = this;\n\n        this.mapData = {\n            center: {\n                lat: 40.680039,\n                lng: -96.5560006,\n                zoom: 4\n            },\n            markers: [],\n            events: {},\n            defaults: {\n                maxZoom: 18,\n                minZoom: 2,\n                maxBounds: [\n                    // south west\n                    [-90, -180],\n                    // north east\n                    [90, 180]\n                ],\n                maxBoundsViscosity: 1,\n                inertiaMaxSpeed: 1,\n                noWrap: false\n            },\n            layers: {\n                baselayers: {\n                    osm: {\n                        name: 'OpenStreetMap',\n                        type: 'xyz',\n                        url: 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n                    }\n                },\n                overlays: {\n                    geos: {\n                        name: 'Geos',\n                        type: 'markercluster',\n                        visible: true\n                    }\n                }\n            }\n        };\n\n        $rootScope.$on('data:stored', function (evt, data) {\n            processData(data.data);\n        });\n\n        function processData(data) {\n            var generateMarkers = function (points) {\n                return points.map(function (point) {\n                    var html = '<strong>Seed: </strong>' + point.seed + '</br>' +\n                                '<strong>Contacts: </strong>' + point.contact.join(', ') + '</br>' +\n                                '<strong>Activity Type: </strong>' + point.activityType + '</br>';\n                    return {\n                        layer: 'geos',\n                        lat: point.latitude,\n                        lng: point.longitude,\n                        message: html\n                    };\n                });\n            };\n\n\n            leafletData.getDirectiveControls().then(function (controls) {\n                var markers = generateMarkers(data);\n                controls.markers.create(markers, vm.mapData.markers);\n                vm.mapData.markers = markers;\n\n                if (vm.mapData.markers.length) {\n                    leafletData.getMap().then(function (map) {\n                        map.fitBounds(vm.mapData.markers);\n                    });\n                }\n            });\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    GridController.$inject = [\"$scope\"];\n    angular\n        .module('app')\n        .controller('GridController', GridController);\n\n    function GridController($scope) {\n        'ngInject';\n\n        var vm = this;\n\n        vm.gridOptions = {\n            columnDefs: [],\n            rowData: null,\n            enableSorting: true,\n            enableColResize: true\n        };\n\n        function processData(results) {\n            console.log(results.data);\n        }\n\n        $scope.$on('data:stored', function (evt, results) {\n            processData(results);\n\n            // <strong>Seed: </strong>' + point.seed + '</br>' +\n            // '<strong>Contacts: </strong>' + point.contact.join(', ') + '</br>' +\n            // '<strong>Activity Type: </strong>' + poi\n\n//             // activityType: d.activityType\n//             // contact: d.contact\n//             // context: d.context\n//             // date: d.date\n//             // seed: d.seed\n//             // tower: d.tower,\n\n            var columnDefs = [\n                {headerName: '#', cellRenderer: function (params) { return params.rowIndex; }, width: 50, cellStyle: {'text-align': 'right'}},\n                {headerName: 'Date', field: 'date', filter: 'date'},\n                {headerName: 'Seed', field: 'seed', filter: 'number'},\n                {headerName: 'Activity Type', field: 'activityType'},\n                {headerName: 'Tower', field: 'tower', filter: 'number'},\n                {headerName: 'Contacts', field: 'contact', filter: 'number'},\n                {headerName: 'Location', cellRenderer: function (params) { return params.data.latitude + ', ' + params.data.longitude; }}\n            ];\n\n            vm.gridOptions.api.setColumnDefs(columnDefs);\n            vm.gridOptions.api.setRowData(results.data);\n            vm.gridOptions.api.sizeColumnsToFit();\n        });\n    }\n})();\n"],"sourceRoot":"/source/"}